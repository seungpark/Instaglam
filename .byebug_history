exit
@photo.tags.delete_all
@photo.tags.methods.sort.inspect
@photo.tags
params[:tags]
@photo.tags
@photo
    @photo.caption = params[:caption]
@photo
@photo.title = params[:title]
params
@photo
exit
Follow.find(24)
@user.follows
Follow.all
@user.follows.new(user_id: @user.id, follower_id: @user.id).save
@user.follows.new(user_id: @user.id, follower_id: @user.id)
@user.follow
@user.follows
@user
exit
@result.build
@result = @user
@user.build
@user
exit
@user.after_add_for_followers
@user.after_add_for_following_users
@user.capture("name")
@user.capture(:name)
@user.capture
@user.column_for_attribute(:following_users)
@user.column_for_attribute
@user.methods.sort.inspect
@user.append
@user.following_users
@user.following_users.pluck
@user.following_users.methods.sort.inspect
@user.following_users
@user
exit
Photo.where(tags: a)
a = params[:tags].to_i
params[:tags].to_i
params[:tags]
params
exit
a
a = @photo.save
@photo.taggings.new(tag_id: new_tag.id, photo_id: @photo.id).save!
@photo.taggings
@photo
exit
@photo
@photo.taggings
exit
      @photo.taggings.new(tag_id: new_tag.id, photo_id: @photo.id).save!
      end
        new_tag = Tag.new(name: tag.name).save!
      else
        new_tag = exists
      if !!exists
      exists = Tag.find_by_name(tag)
    tags.each do |tag|
exit
@photo.save!
@photo.tags.new(id: exists.id, name: exists.name)
!!exists
exists = Tag.find_by_name(tag)
tag = tags[0]
exit
@photo.tags
@photo
@photo.save!
 @photo.tags.new(id: exists.id, name: exists.name)
@photo
@photo.save!
@photo.tags
@photo
@photo.tags.new(id: exists.id, name: exists.name)
@photo.tags.new(id: exists.id)
@photo.tags.new(exists)
exists = Tag.find_by_name(tag)
tag
@photo.save!
@photo
@photo.tags.new(name: tag)
@photos.tags.new(name: tag)
Tag.find_by_name(tag)
tag = tags[1]
@photo.tags.new(name: tag).save!
@photo
Tag.find_by_name(tag)
!!Tag.find_by_name(tag)
tag
tag = tags[0]
exit
puts "hi" if !!Tag.find_by_name(tag)
puts "hi" if !Tag.find_by_name(tag)
puts "hi" if Tag.find_by_name(tag)
Tag.find_by_name(tag)
tag = tags[0]
exit
@photo.tags.new(name: tag)
@photo.(
@photo.tags
@photo
@photo = Photo.new(photo_params)
@photo
tag = tags[0]
tags = params[:photo][:tags].split(",")
params[:photo][:tags].split(",")
params[:photo][:tags]
params[:tags]
photo_params
exit
photo_params
exit
@photo = Photo.new(title:"hi", caption:"bye", user_id:1, tags: "hifasfas")
@photo
@photo = Photo.new(title:"hi", caption:"bye", user_id:1, tags: "hi")
@photo = Photo.new(photo_params)
photo_params
@photo
Tag.new(name:"THESE").save
Tag.new(name:"THESE")
Tag.save(name:"THESE")
params[:photo][:tags].split(",")
params[:photo][:tags]
params.tags
params[:tags]
params
photo_params[:tags].split(",")
photo_params.tags.split(",")
photo_params
exit
photo_params[:tags][0]
photo_params
exit
photo_params
exit
Like.where(id: params[:id])[0]
params
exit
params.require(:userinfo).permit(:username, :password, :name, :bio)[:username]
params.require(:userinfo).permit(:username, :password, :name, :bio)
params
exit
params
exit
user.followers
user
use
@user
exit
eit
exit
Photo.where(user_id: params[:user_id])
Photo.select(user_id: params[:user_id])
params
exit
eit
Photo.where(user_id: params[:user_id])
params
exit
params
exit
params
exit
params[:following_users]
params[:following_users][:id]
Photo.where(user_id: params[:following_users][:id])
Photo.where(user_id: params[:follower_users][:id])
params
exit
@user.avatar.url
@user.avatar
@user.avatar.url
@user
exit
@user
@user.update_attributes({name: params[:name], bio: params[:bio]})
params
params.require(:user).permit(:name, :bio)
params
@user = User.find(params[:id])
exit
params
exit
params
exit
@comment = Comment.where(id: params[:id])[0]
params
exit
params
exit
@comment.save
@comment = current_user.comments.new(photo_id: params[:photo_id].to_i, body: params[:body])
      body: params[:body]
      photo_id: params[:photo_id].to_i,
    @comment = current_user.comments.new(
params[:photo_id].to_i
params.require(:photo_id)params[:photo_id].to_i
params.require(:photo_id)
params
params[:photo_id]
params.photo_id
params
current_user.comments
exit
current_user.comments
current_user
params
exit
@like = Like.where(id: params[:id])[0]
@like = Like.where(id: params[:id])
@like = Like.find(id: params[:id].to_i)
@like = Like.find(id: params[:id])
params
exit
Comment.where(id: params[:id])[0]
@comment = Comment.find(id: params[:id].to_i)
params[:id]
@comment = Comment.find(id: params[:id])
exit
@comment[0]
@comment.destroy!
@comment.delete
@comment.destroy
@comment = Comment.where(id: params[:id])
exit
@comment = Comment.where(id: params[:id])
params
exit
Comment.find(params[:id])
=> 26:     @comment = Comment.find(params:[id])
exit
n
s
exit
params
exit
    @like.destroy
@like
    @like = Like.where(["photo_id = ? and user_id = ?", photoid, userid ])[0]
    Like.where(["photo_id = ? and user_id = ?", photoid, userid ]).first
    Like.where(["photo_id = ? and user_id = ?", photoid, userid ])
    Like.find(["photo_id = ? and user_id = ?", photoid, userid ])
    userid = params[:user_id]
photoid = params[:photo_id]
Like.where(["user_id = ? and photo_id = ?", params[:photo_id], params[:user_id] ]) [0]
Like.where(["user_id = ? and photo_id = ?", params[:photo_id], params[:user_id] ])
@like.id
@like
params
